elihoehne@inno105-lap2 Compiler Repo  % java -jar "HOEHNE_LEXICAL.jar" LexicalTestSP23.txt LexicalSymbol.txt
elihoehne@inno105-lap2 Compiler Repo  %  /usr/bin/env /Library/Java/JavaVirtualMachines/temurin-17.jdk/Contents/Home/bin/java -XX:+ShowCodeDetail
sInExceptionMessages -cp /Users/elihoehne/Library/Application\ Support/Code/User/workspaceStorage/fe93afdaca101da8066ea8ddb8b522f3/redhat.java/jd
t_ws/Compiler\ Repo\ _dc4da986/bin Main 
Eli Hoehne CS 4100 Part 2 Spring 2023
Lexical for LexicalTestSP23.txt
0001 
0002 
0003 
0004 
0005 {Here is Lexical Test file 1 # *) which 
0006   has a comment that
0007   spans 3 lines, followed by an empty comment }
0008 {}
0009 
0010 amount:=1;
        IDENT |         0050 |  amount
        ASIGN |         0037 |  :=
        INTGR |         0001 |  1
        SCOLN |         0036 |  ;
0011 b:=a+b-c*21.7/22;
        IDENT |         0050 |  b
        ASIGN |         0037 |  :=
        IDENT |         0050 |  a
        __ADD |         0032 |  +
        IDENT |         0050 |  b
        __SUB |         0033 |  -
        IDENT |         0050 |  c
        _MULT |         0031 |  *
        FLOAT |         0023 |  21.7
        DIVID |         0030 |  /
        INTGR |         0001 |  22
        SCOLN |         0036 |  ;
0012      123456789112345 (*this number is 15 chars, truncate int to 6 *)
**** ERROR FOUND: Identifier length is 15, it will be truncated to 6
        INTGR |         0001 |  123456
0013      12.34567891134567 (*this number is 17 chars, but should be 
**** ERROR FOUND: Identifier length is 17, it will be truncated to 12
        FLOAT |         0023 |  12.345678911
0014                         truncated to 12 in the symbol table*)
0015 hereisareallylongidentifierthatistoolong := 66;
**** ERROR FOUND: Identifier length is 40, it will be truncated to 20
        IDENT |         0050 |  hereisareallylongide
        ASIGN |         0037 |  :=
        INTGR |         0001 |  66
        SCOLN |         0036 |  ;
0016 hereisareallylongidentifierthatissameasabovewhentruncated := 76.5E-12;
**** ERROR FOUND: Identifier length is 57, it will be truncated to 20
        IDENT |         0050 |  hereisareallylongide
        ASIGN |         0037 |  :=
        FLOAT |         0023 |  76.5E
        __SUB |         0033 |  -
        INTGR |         0001 |  12
        SCOLN |         0036 |  ;
0017   109.E+10      12.33E5 
        FLOAT |         0023 |  109.E
        __ADD |         0032 |  +
        INTGR |         0001 |  10
        FLOAT |         0023 |  12.33E5
0018   12.4 E-2
        FLOAT |         0023 |  12.4
        IDENT |         0050 |  E
        __SUB |         0033 |  -
        INTGR |         0001 |  2
0019   
0020    *) {<--Orphaned closed comment is just '*' and ')' returned as separate tokens}
        _MULT |         0031 |  *
        RPREN |         0035 |  )
0021            myString_1 : = "an unfinished string makes an error ;
        IDENT |         0050 |  myString_1
        COLON |         0047 |  :
        EQUAL |         0042 |  =
**** ERROR FOUND: Unterminated string found
        UNDEF |         0099 |  "an unfinished string makes an error ;
0022   test single #and two char tokens 
        IDENT |         0050 |  test
        IDENT |         0050 |  single
        UNDEF |         0099 |  #
        IDENT |         0050 |  and
        IDENT |         0050 |  two
        IDENT |         0050 |  char
        IDENT |         0050 |  tokens
0023      # /*^&%+-  some more (   ) (**) ;:=><>=<==<>,[]:.
        UNDEF |         0099 |  #
        DIVID |         0030 |  /
        _MULT |         0031 |  *
        UNDEF |         0099 |  ^
        UNDEF |         0099 |  &
        UNDEF |         0099 |  %
        __ADD |         0032 |  +
        __SUB |         0033 |  -
        IDENT |         0050 |  some
        IDENT |         0050 |  more
        LPREN |         0034 |  (
        RPREN |         0035 |  )
        SCOLN |         0036 |  ;
        ASIGN |         0037 |  :=
        _GRTR |         0038 |  >
        NTEQL |         0043 |  <>
        EQUAL |         0042 |  =
        LSEQL |         0041 |  <=
        EQUAL |         0042 |  =
        NTEQL |         0043 |  <>
        COMMA |         0044 |  ,
        LBRKT |         0045 |  [
        RBRKT |         0046 |  ]
        COLON |         0047 |  :
        __DOT |         0048 |  .
0024 (* mixed in reserve words 
0025 below........................... *)  "but first is a good string"
        STRNG |         0024 |  "but first is a good string
**** ERROR FOUND: Unterminated string found
        UNDEF |         0099 |  "
0026   GOTO JumpOut;  INTEGER TO DO
        _GOTO |         0000 |  GOTO
        IDENT |         0050 |  JumpOut
        SCOLN |         0036 |  ;
        INTGR |         0001 |  INTEGER
        ___TO |         0002 |  TO
        ___DO |         0003 |  DO
0027    begin  if not then that else nothing
        BEGIN |         0011 |  begin
        ___IF |         0004 |  if
        IDENT |         0050 |  not
        _THEN |         0005 |  then
        IDENT |         0050 |  that
        _ELSE |         0006 |  else
        IDENT |         0050 |  nothing
0028 THEN ELSE
        _THEN |         0005 |  THEN
        _ELSE |         0006 |  ELSE
0029 For I := 1 to 100.E7 of float do
        __FOR |         0007 |  For
        IDENT |         0050 |  I
        ASIGN |         0037 |  :=
        INTGR |         0001 |  1
        ___TO |         0002 |  to
        FLOAT |         0023 |  100.E7
        ___OF |         0008 |  of
        FLOAT |         0023 |  float
        ___DO |         0003 |  do
0030     WRITELN
        WRILN |         0009 |  WRITELN
0031     BEGIN
        BEGIN |         0011 |  BEGIN
0032     END
        __END |         0012 |  END
0033   declare  ARRAY 
        IDENT |         0050 |  declare
        ARRAY |         0025 |  ARRAY
0034    VAR DOWHILE  module UNIT Label  RePeaT  UNTIL done = TRUE;
        __VAR |         0013 |  VAR
        DOWHL |         0014 |  DOWHILE
        IDENT |         0050 |  module
        _UNIT |         0015 |  UNIT
        LABEL |         0016 |  Label
        RPEAT |         0017 |  RePeaT
        UNTIL |         0018 |  UNTIL
        IDENT |         0050 |  done
        EQUAL |         0042 |  =
        IDENT |         0050 |  TRUE
        SCOLN |         0036 |  ;
0035 
0036  PROCEDURE  FUNCTION DOWNTO does READLN   RETURN
        PRCDR |         0019 |  PROCEDURE
        FNCTN |         0021 |  FUNCTION
        DWNTO |         0020 |  DOWNTO
        IDENT |         0050 |  does
        REALN |         0010 |  READLN
        RETRN |         0022 |  RETURN
0037    FLOAT
        FLOAT |         0023 |  FLOAT
0038    STRING
        STRNG |         0024 |  STRING
0039 
0040 Beginning not reserve writeln.   !@#$%^&*()_+
        IDENT |         0050 |  Beginning
        IDENT |         0050 |  not
        IDENT |         0050 |  reserve
        WRILN |         0009 |  writeln
        __DOT |         0048 |  .
        UNDEF |         0099 |  !
        UNDEF |         0099 |  @
        UNDEF |         0099 |  #
        UNDEF |         0099 |  $
        UNDEF |         0099 |  %
        UNDEF |         0099 |  ^
        UNDEF |         0099 |  &
        _MULT |         0031 |  *
        LPREN |         0034 |  (
        RPREN |         0035 |  )
        UNDEF |         0099 |  _
        __ADD |         0032 |  +
0041 sum := 0.0;
        IDENT |         0050 |  sum
        ASIGN |         0037 |  :=
        FLOAT |         0023 |  0.0
        SCOLN |         0036 |  ;
0042 sum := sum + 2;
        IDENT |         0050 |  sum
        ASIGN |         0037 |  :=
        IDENT |         0050 |  sum
        __ADD |         0032 |  +
        INTGR |         0001 |  2
        SCOLN |         0036 |  ;
0043 What if 2. is found?
        IDENT |         0050 |  What
        ___IF |         0004 |  if
        FLOAT |         0023 |  2.
        IDENT |         0050 |  is
        IDENT |         0050 |  found
        UNDEF |         0099 |  ?
0044 
0045 (* end of file comes
0046    before the end of this 
0047    comment-- Throw an Error!
0048 
0049 
0050                      
**** ERROR FOUND: Comment not terminated before End Of File
Done.
elihoehne@inno105-lap2 Compiler Repo  % java -jar "HOEHNE_LEXICAL.jar" LexicalTestSP23.txt LexicalSymbol.txt
Eli Hoehne CS 4100 Part 2 Spring 2023
Lexical for LexicalTestSP23.txt
0001 
0002 
0003 
0004 
0005 {Here is Lexical Test file 1 # *) which 
0006   has a comment that
0007   spans 3 lines, followed by an empty comment }
0008 {}
0009 
0010 amount:=1;
        IDENT |         0050 |  amount
        ASIGN |         0037 |  :=
        INTGR |         0001 |  1
        SCOLN |         0036 |  ;
0011 b:=a+b-c*21.7/22;
        IDENT |         0050 |  b
        ASIGN |         0037 |  :=
        IDENT |         0050 |  a
        __ADD |         0032 |  +
        IDENT |         0050 |  b
        __SUB |         0033 |  -
        IDENT |         0050 |  c
        _MULT |         0031 |  *
        FLOAT |         0023 |  21.7
        DIVID |         0030 |  /
        INTGR |         0001 |  22
        SCOLN |         0036 |  ;
0012      123456789112345 (*this number is 15 chars, truncate int to 6 *)
**** ERROR FOUND: Identifier length is 15, it will be truncated to 6
        INTGR |         0001 |  123456
0013      12.34567891134567 (*this number is 17 chars, but should be 
**** ERROR FOUND: Identifier length is 17, it will be truncated to 12
        FLOAT |         0023 |  12.345678911
0014                         truncated to 12 in the symbol table*)
0015 hereisareallylongidentifierthatistoolong := 66;
**** ERROR FOUND: Identifier length is 40, it will be truncated to 20
        IDENT |         0050 |  hereisareallylongide
        ASIGN |         0037 |  :=
        INTGR |         0001 |  66
        SCOLN |         0036 |  ;
0016 hereisareallylongidentifierthatissameasabovewhentruncated := 76.5E-12;
**** ERROR FOUND: Identifier length is 57, it will be truncated to 20
        IDENT |         0050 |  hereisareallylongide
        ASIGN |         0037 |  :=
        FLOAT |         0023 |  76.5E
        __SUB |         0033 |  -
        INTGR |         0001 |  12
        SCOLN |         0036 |  ;
0017   109.E+10      12.33E5 
        FLOAT |         0023 |  109.E
        __ADD |         0032 |  +
        INTGR |         0001 |  10
        FLOAT |         0023 |  12.33E5
0018   12.4 E-2
        FLOAT |         0023 |  12.4
        IDENT |         0050 |  E
        __SUB |         0033 |  -
        INTGR |         0001 |  2
0019   
0020    *) {<--Orphaned closed comment is just '*' and ')' returned as separate tokens}
        _MULT |         0031 |  *
        RPREN |         0035 |  )
0021            myString_1 : = "an unfinished string makes an error ;
        IDENT |         0050 |  myString_1
        COLON |         0047 |  :
        EQUAL |         0042 |  =
**** ERROR FOUND: Unterminated string found
        UNDEF |         0099 |  "an unfinished string makes an error ;
0022   test single #and two char tokens 
        IDENT |         0050 |  test
        IDENT |         0050 |  single
        UNDEF |         0099 |  #
        IDENT |         0050 |  and
        IDENT |         0050 |  two
        IDENT |         0050 |  char
        IDENT |         0050 |  tokens
0023      # /*^&%+-  some more (   ) (**) ;:=><>=<==<>,[]:.
        UNDEF |         0099 |  #
        DIVID |         0030 |  /
        _MULT |         0031 |  *
        UNDEF |         0099 |  ^
        UNDEF |         0099 |  &
        UNDEF |         0099 |  %
        __ADD |         0032 |  +
        __SUB |         0033 |  -
        IDENT |         0050 |  some
        IDENT |         0050 |  more
        LPREN |         0034 |  (
        RPREN |         0035 |  )
        SCOLN |         0036 |  ;
        ASIGN |         0037 |  :=
        _GRTR |         0038 |  >
        NTEQL |         0043 |  <>
        EQUAL |         0042 |  =
        LSEQL |         0041 |  <=
        EQUAL |         0042 |  =
        NTEQL |         0043 |  <>
        COMMA |         0044 |  ,
        LBRKT |         0045 |  [
        RBRKT |         0046 |  ]
        COLON |         0047 |  :
        __DOT |         0048 |  .
0024 (* mixed in reserve words 
0025 below........................... *)  "but first is a good string"
        STRNG |         0024 |  "but first is a good string
**** ERROR FOUND: Unterminated string found
        UNDEF |         0099 |  "
0026   GOTO JumpOut;  INTEGER TO DO
        _GOTO |         0000 |  GOTO
        IDENT |         0050 |  JumpOut
        SCOLN |         0036 |  ;
        INTGR |         0001 |  INTEGER
        ___TO |         0002 |  TO
        ___DO |         0003 |  DO
0027    begin  if not then that else nothing
        BEGIN |         0011 |  begin
        ___IF |         0004 |  if
        IDENT |         0050 |  not
        _THEN |         0005 |  then
        IDENT |         0050 |  that
        _ELSE |         0006 |  else
        IDENT |         0050 |  nothing
0028 THEN ELSE
        _THEN |         0005 |  THEN
        _ELSE |         0006 |  ELSE
0029 For I := 1 to 100.E7 of float do
        __FOR |         0007 |  For
        IDENT |         0050 |  I
        ASIGN |         0037 |  :=
        INTGR |         0001 |  1
        ___TO |         0002 |  to
        FLOAT |         0023 |  100.E7
        ___OF |         0008 |  of
        FLOAT |         0023 |  float
        ___DO |         0003 |  do
0030     WRITELN
        WRILN |         0009 |  WRITELN
0031     BEGIN
        BEGIN |         0011 |  BEGIN
0032     END
        __END |         0012 |  END
0033   declare  ARRAY 
        IDENT |         0050 |  declare
        ARRAY |         0025 |  ARRAY
0034    VAR DOWHILE  module UNIT Label  RePeaT  UNTIL done = TRUE;
        __VAR |         0013 |  VAR
        DOWHL |         0014 |  DOWHILE
        IDENT |         0050 |  module
        _UNIT |         0015 |  UNIT
        LABEL |         0016 |  Label
        RPEAT |         0017 |  RePeaT
        UNTIL |         0018 |  UNTIL
        IDENT |         0050 |  done
        EQUAL |         0042 |  =
        IDENT |         0050 |  TRUE
        SCOLN |         0036 |  ;
0035 
0036  PROCEDURE  FUNCTION DOWNTO does READLN   RETURN
        PRCDR |         0019 |  PROCEDURE
        FNCTN |         0021 |  FUNCTION
        DWNTO |         0020 |  DOWNTO
        IDENT |         0050 |  does
        REALN |         0010 |  READLN
        RETRN |         0022 |  RETURN
0037    FLOAT
        FLOAT |         0023 |  FLOAT
0038    STRING
        STRNG |         0024 |  STRING
0039 
0040 Beginning not reserve writeln.   !@#$%^&*()_+
        IDENT |         0050 |  Beginning
        IDENT |         0050 |  not
        IDENT |         0050 |  reserve
        WRILN |         0009 |  writeln
        __DOT |         0048 |  .
        UNDEF |         0099 |  !
        UNDEF |         0099 |  @
        UNDEF |         0099 |  #
        UNDEF |         0099 |  $
        UNDEF |         0099 |  %
        UNDEF |         0099 |  ^
        UNDEF |         0099 |  &
        _MULT |         0031 |  *
        LPREN |         0034 |  (
        RPREN |         0035 |  )
        UNDEF |         0099 |  _
        __ADD |         0032 |  +
0041 sum := 0.0;
        IDENT |         0050 |  sum
        ASIGN |         0037 |  :=
        FLOAT |         0023 |  0.0
        SCOLN |         0036 |  ;
0042 sum := sum + 2;
        IDENT |         0050 |  sum
        ASIGN |         0037 |  :=
        IDENT |         0050 |  sum
        __ADD |         0032 |  +
        INTGR |         0001 |  2
        SCOLN |         0036 |  ;
0043 What if 2. is found?
        IDENT |         0050 |  What
        ___IF |         0004 |  if
        FLOAT |         0023 |  2.
        IDENT |         0050 |  is
        IDENT |         0050 |  found
        UNDEF |         0099 |  ?
0044 
0045 (* end of file comes
0046    before the end of this 
0047    comment-- Throw an Error!
0048 
0049 
0050                      
**** ERROR FOUND: Comment not terminated before End Of File
Done.
elihoehne@inno105-lap2 Compiler Repo  % 